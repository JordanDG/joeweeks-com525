{"version":3,"sources":["components/week-1/assets/LoadingGif2Final","components/week-1/Week1.js","components/week-2/Week2.js","components/week-3/Week3.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Main","styled","div","HeaderMain","h1","MainContainer","Week1","src","LoadingGif","alt","AlertFloatIn","keyframes","AlertFloatOut","ToasterContainer","Alert","HeaderAlert","AlertCreationButton","button","Week2","onClick","e","preventDefault","document","getElementById","classList","toggle","className","id","icon","faTimes","color","fixedWidth","f","becomevisible","StyledWrapper","StyledButton","props","hoverColor","StyledButtonOutline","StyledButtonMinimal","StyledButtonRounded","border","BecomeVisible","p","Floater","Breaker","Button","children","ButtonOutline","ButtonMinimal","ButtonRounded","Week3","faPlus","ReturnToMain","to","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f38eeff4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LoadingGif2Final.3395a399.bin\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport LoadingGif from \"./assets/LoadingGif2Final\";\r\n\r\nconst Main = styled.div`\r\n    width: 100vw;\r\n    height: 90vh;\r\n    margin-top: 0vh;\r\n`;\r\n\r\nconst HeaderMain = styled.h1`\r\n    margin-top: -15vh;\r\n    font-weight: 300;\r\n    word-spacing: 5px;\r\n    letter-spacing: 0.5px;\r\n`;\r\n\r\nconst MainContainer = styled.div`\r\n    width: 100vw;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nfunction Week1() {\r\n    return (\r\n    <Main>\r\n        <MainContainer>\r\n            <img src={LoadingGif} alt=\"Main Loading Logo\" />\r\n            <HeaderMain>Webpage Loading...</HeaderMain>\r\n        </MainContainer>\r\n    </Main>\r\n    );\r\n}\r\n\r\nexport default Week1;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { keyframes } from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst AlertFloatIn = keyframes`\r\n    from { transform: translateY(280px); opacity: 0; }\r\n    to { transform: translateY(40px); opacity: 1; }\r\n`;\r\n\r\nconst AlertFloatOut = keyframes`\r\n    from { transform: translateY(40px); opacity: 1; }\r\n    to { transform: translateY(280px); opacity: 0; }\r\n`;\r\n\r\nconst Main = styled.div`\r\n    width: 100vw;\r\n    height: 90vh;\r\n    margin-top: 0vh;\r\n    text-align: center;\r\n\r\n    & h1 {\r\n        font-weight: 300;\r\n    }\r\n`\r\n\r\nconst ToasterContainer = styled.div`\r\n    width: 10vw;\r\n    margin-left: 45vw;\r\n    height: 10vh;\r\n    position: relative;\r\n    bottom: -90%;\r\n`;\r\n\r\nconst Alert = styled.div`\r\n    width: 100%;\r\n    height: 50%;\r\n    background-color: #00D7A3;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transform: translateY(280px);\r\n    transition: all 1s ease-in-out;\r\n\r\n    &.Open {\r\n        animation: ${AlertFloatIn} 1s;\r\n        animation-fill-mode: forwards;\r\n        transition: all 1s ease-in-out;\r\n    }\r\n\r\n    &.Closed {\r\n        animation: ${AlertFloatOut} 1s;\r\n        animation-fill-mode: forwards;\r\n        transition: all 1s ease-in-out;\r\n    }\r\n`;\r\n\r\nconst HeaderAlert = styled.h1`\r\n    color: #000;\r\n    line-height: 200%;\r\n    height: 100%;\r\n`;\r\n\r\nconst AlertCreationButton = styled.button`\r\n    font-size: 28px;\r\n    position: absolute;\r\n    width: 5vw;\r\n    left: 47.5vw;\r\n`;\r\n\r\nfunction Week2() {\r\n\r\n    function handleCLick(f) {\r\n        f.preventDefault();\r\n        document.getElementById(\"AlertBox\").classList.toggle(\"Closed\");\r\n    }\r\n\r\n    function DisplayAlert(e) {\r\n        e.preventDefault();;\r\n        document.getElementById(\"AlertBox\").classList.toggle(\"Open\");\r\n    }\r\n\r\n    return (\r\n        <Main>\r\n            <AlertCreationButton onClick={DisplayAlert}>Save</AlertCreationButton>\r\n            <ToasterContainer>\r\n                <Alert className=\"Alert\" id=\"AlertBox\">\r\n                    <FontAwesomeIcon icon={faTimes} color=\"#000\" fixedWidth onClick={handleCLick}/>\r\n                    <HeaderAlert>Saved</HeaderAlert>\r\n                </Alert>\r\n            </ToasterContainer>\r\n        </Main>\r\n    );\r\n}\r\n\r\nexport default Week2;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { keyframes } from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst becomevisible = keyframes`\r\n    from { opacity: 0; }\r\n    to { opacity: 1; }\r\n`;\r\n\r\nconst StyledWrapper = styled.div`\r\n    width: 100vw;\r\n    margin-left: 0vw;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n    color: #000;\r\n    background-color: ${(props) => props.color};\r\n    padding: 1rem 2rem;\r\n    font-size: 1.5rem;\r\n    font-weight: 300;\r\n    border: 0.5px solid #000;\r\n    border-radius: 0.25rem;\r\n    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);\r\n    cursor: pointer;\r\n    margin: 2%;\r\n    transition: all 0.5s ease-in-out;\r\n\r\n    &:hover {\r\n        color: #000;\r\n        background-color: ${(props) => props.hoverColor};\r\n    }\r\n`;\r\n\r\nconst StyledButtonOutline = styled.button`\r\n    color: #000;\r\n    background-color: ${(props) => props.color};\r\n    padding: 1rem 2rem;\r\n    font-size: 1.5rem;\r\n    font-weight: 300;\r\n    border: 0.5px solid #000;\r\n    border-radius: 0.25rem;\r\n    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);\r\n    cursor: pointer;\r\n    margin: 2%;\r\n    transition: all 0.5s ease-in-out;\r\n\r\n    &:hover {\r\n        color: #000;\r\n        background-color: ${(props) => props.hoverColor};\r\n    }\r\n`;\r\n\r\nconst StyledButtonMinimal = styled.button`\r\n    color: #000;\r\n    background-color: ${(props) => props.color};\r\n    padding: 1rem 2rem;\r\n    font-size: 1.5rem;\r\n    font-weight: 300;\r\n    border: 0;\r\n    border-radius: 0.25rem;\r\n    cursor: pointer;\r\n    margin: 2%;\r\n    transition: all 0.5s ease-in-out;\r\n\r\n    &:hover {\r\n        color: #000;\r\n        background-color: ${(props) => props.hoverColor};\r\n    }\r\n`;\r\n\r\nconst StyledButtonRounded = styled.button`\r\n    color: #000;\r\n    background-color: ${(props) => props.color};\r\n    font-size: 1.5rem;\r\n    font-weight: 300;\r\n    border: ${(props) => props.border};\r\n    width: 60px;\r\n    height: 60px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    margin: 2%;\r\n    overflow: hidden;\r\n    transition: all 0.5s ease-in-out;\r\n    padding-top: 14px;\r\n\r\n    &:hover {\r\n        color: #000;\r\n        background-color: ${(props) => props.hoverColor};\r\n        width: 200px;\r\n        border-radius: 0.25rem;\r\n\r\n        & .BecomeVisible {\r\n            animation: ${becomevisible} 0.5s;\r\n            animation-delay: 0.5s;\r\n            animation-fill-mode: forwards;\r\n        }\r\n\r\n        & .Floater {\r\n            margin-top: 0px;\r\n            left: 14px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst BecomeVisible = styled.p`\r\n    color: #000;\r\n    opacity: 0;\r\n`;\r\n\r\nconst Floater = styled.div`\r\n    float: left;\r\n    margin-left: 14px;\r\n    height: 100%;\r\n`;\r\n\r\nconst Breaker = styled.div`\r\n    flex-basis: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-left: 0vw;\r\n`\r\n\r\nconst Button = (props) => {\r\n    const { children, color, hoverColor } = props;\r\n    return <StyledButton color={color} hoverColor={hoverColor}> {children} </StyledButton>\r\n};\r\n\r\nconst ButtonOutline = (props) => {\r\n    const { children, color, hoverColor } = props;\r\n    return <StyledButtonOutline color={color} hoverColor={hoverColor}> {children} </StyledButtonOutline>\r\n};\r\n\r\nconst ButtonMinimal = (props) => {\r\n    const { children, color, hoverColor } = props;\r\n    return <StyledButtonMinimal color={color} hoverColor={hoverColor}> {children} </StyledButtonMinimal>\r\n};\r\n\r\nconst ButtonRounded = (props) => {\r\n    const { children, color, hoverColor, border } = props;\r\n    return <StyledButtonRounded color={color} hoverColor={hoverColor} border={border}> {children} </StyledButtonRounded>\r\n};\r\n\r\nfunction Week3() {\r\n    return (\r\n        <StyledWrapper>\r\n            <Breaker>\r\n                <Button color=\"#00D7A3\" hoverColor=\"#00FFC2\">CONTACT</Button>\r\n                <ButtonOutline color=\"transparent\" hoverColor=\"#00FFC2\">CONTACT</ButtonOutline>\r\n                <ButtonMinimal color=\"transparent\" hoverColor=\"#00FFC2\">CONTACT</ButtonMinimal>\r\n            </Breaker>\r\n            <Breaker>\r\n                <Button color=\"#00D7A3\" hoverColor=\"#00FFC2\">\r\n                    <FontAwesomeIcon icon={faPlus} color=\"#000\" fixedWidth/> ADD NEW\r\n                </Button>\r\n                <ButtonOutline color=\"transparent\" hoverColor=\"#00FFC2\">\r\n                    <FontAwesomeIcon icon={faPlus} color=\"#000\" fixedWidth/> ADD NEW\r\n                </ButtonOutline>\r\n                <ButtonMinimal color=\"transparent\" hoverColor=\"#00FFC2\">\r\n                    <FontAwesomeIcon icon={faPlus} color=\"#000\" fixedWidth/> ADD NEW\r\n                </ButtonMinimal>\r\n            </Breaker>\r\n            <Breaker>\r\n                <ButtonRounded color=\"#00D7A3\" hoverColor=\"#00FFC2\" border=\"0.5px solid #000\">\r\n                    <Floater className=\"Floater\">\r\n                        <FontAwesomeIcon icon={faPlus} color=\"#000\" fixedWidth/>\r\n                    </Floater>\r\n                    <BecomeVisible className=\"BecomeVisible\">ADD NEW</BecomeVisible>\r\n                </ButtonRounded>\r\n                <ButtonRounded color=\"transparent\" hoverColor=\"#00FFC2\" border=\"0.5px solid #000\">\r\n                    <Floater className=\"Floater\">\r\n                        <FontAwesomeIcon icon={faPlus} color=\"#000\" fixedWidth/>\r\n                    </Floater>\r\n                    <BecomeVisible className=\"BecomeVisible\">ADD NEW</BecomeVisible>\r\n                </ButtonRounded>\r\n                <ButtonRounded color=\"transparent\" hoverColor=\"#00FFC2\" border=\"0\">\r\n                    <Floater className=\"Floater\">\r\n                        <FontAwesomeIcon icon={faPlus} color=\"#000\" fixedWidth/>\r\n                    </Floater>\r\n                    <BecomeVisible className=\"BecomeVisible\">ADD NEW</BecomeVisible>\r\n                </ButtonRounded>\r\n            </Breaker>\r\n        </StyledWrapper>\r\n    );\r\n}\r\n\r\nexport default Week3;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Week1 from \"./components/week-1/Week1.js\";\nimport Week2 from \"./components/week-2/Week2.js\";\nimport Week3 from \"./components/week-3/Week3.js\";\n// eslint-disable-next-line \nimport styling from \"./style.css\";\n\nfunction ReturnToMain() {\n  return (\n      <nav>\n          <h1>Welcome to Interaction Design!</h1>\n          <ul>\n              <li>\n                  <Link to=\"/week-1\">Week1</Link>\n              </li>\n              <li>\n                  <Link to=\"/week-2\">Week2</Link>\n              </li>\n              <li>\n                  <Link to=\"/week-3\">Week3</Link>\n              </li>\n          </ul>\n      </nav>\n  )\n}\n\nfunction App() {\n  return (\n    <Router>\n      <ReturnToMain />\n      <Switch>\n        <Route path=\"/week-1\">\n          <Week1 />\n        </Route>\n        <Route path=\"/week-2\">\n          <Week2 />\n        </Route>\n        <Route path=\"/week-3\">\n          <Week3 />\n        </Route>\n        <Route path=\"/\">\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}